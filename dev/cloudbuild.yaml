---
steps:
  # Build the helloworld container image.
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/helloworld:${SHORT_SHA}'
      - '.'

  # Retrieve and decrypt the GitHub Hub configuration.
  # - name: 'gcr.io/cloud-builders/gcloud'
  #   entrypoint: 'sh'
  #   args:
  #     - '-c'
  #     - |
  #       gsutil cp gs://${PROJECT_ID}-helloworld-configs/hub.enc hub.enc
  #       gcloud kms decrypt \
  #         --ciphertext-file hub.enc \
  #         --plaintext-file /config/hub \
  #         --location global \
  #         --keyring ${_KMS_KEYRING} \
  #         --key ${_KMS_KEY}
  #   volumes:
  #     - name: 'config'
  #       path: /config

  # Generate a kubeconfig file for the given GKE cluster.
  - name: 'gcr.io/cloud-builders/kubectl'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
      - 'KUBECONFIG=/kube/config'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        CLUSTER=$$(gcloud config get-value container/cluster)
        PROJECT=$$(gcloud config get-value core/project)
        ZONE=$$(gcloud config get-value compute/zone)

        gcloud container clusters get-credentials "$${CLUSTER}" \
          --project "$${PROJECT}" \
          --zone "$${ZONE}"
    volumes:
      - name: 'kube'
        path: /kube

  # Clone the helloworld-infrastructure-staging repo.
  - name: 'gcr.io/hightowerlabs/hub'
    env:
      # - 'HUB_CONFIG=/config/hub'
      - 'KUBECONFIG=/kube/config'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        ACTIVE_ACCOUNT=$(gcloud auth list --filter=status:ACTIVE --format="value(account)")
        BRANCH="${_ENV}-deploy-$${SHORT_SHA}"
        K8S_REPONAME='kubernetes-gitops-k8s'
        hub config --global credential.https://github.com.helper /usr/local/bin/hub-credential-helper
        hub config --global hub.protocol https
        hub config --global user.email "$${ACTIVE_ACCOUNT}"
        hub config --global user.name "Google Container Builder"
        git clone "https://source.developers.google.com/p/${PROJECT_ID}/r/$${K8S_REPONAME}"
        cd "$${K8S_REPONAME}"
        hub checkout "$${BRANCH}"
        cat <<EOF > patch.yaml
        spec:
          template:
            spec:
              containers:
                - name: ${_ROLE}
                  image: gcr.io/${PROJECT_ID}/roles/${_ROLE}:${SHORT_SHA}
        EOF
        kubectl patch --local -o yaml \
          -f kubernetes/${_ENV}/deployments/${_ROLE}.yaml \
          -p "$(cat patch.yaml)" \
          > ${_ROLE}.yaml
        mv ${_ROLE}.yaml kubernetes/${_ENV}/deployments/${_ROLE}.yaml
        hub add kubernetes/${_ENV}/deployments/${_ROLE}.yaml

        hub commit -F- <<EOF
        Update the kubernetes-gitops application in ${_ROLE}
        This commit updates the helloworld deployment container image to:
            gcr.io/${PROJECT_ID}/roles/${_ROLE}:${SHORT_SHA}
        Build ID: ${BUILD_ID}
        EOF
        hub push origin $${BRANCH}
    volumes:
      # - name: 'config'
      #   path: /config
      - name: 'kube'
        path: /kube

images:
  - 'gcr.io/${PROJECT_ID}/roles/${_ROLE}:${SHORT_SHA}'
